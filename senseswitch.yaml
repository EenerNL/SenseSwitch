### This config is made by EenerNL

### GLOBAL SETTINGS ###
substitutions:
  name: "senseswitch"
  friendly_name: "SenseSwitch"

esphome:
  name: "${name}"
  friendly_name: "${friendly_name}"
  project:
    name: "EenerNL.SenseSwitch"
    version: "2023.8.4"

esp32:
  board: esp32dev
  framework:
    type: esp-idf 

logger:
api:
ota:
captive_portal:

wifi:
  ap:
    ssid: "${friendly_name}"

esp32_ble_tracker:
  scan_parameters:
    interval: 1100ms
    window: 1100ms
    active: true

bluetooth_proxy:
  active: true

# web_server:               ## Disabled to free up memory and more stability
#  port: 80
#  include_internal: true

dashboard_import:
  package_import_url: github://eenernl/SenseSwitch/senseswitch.yaml@main
  import_full_config: false

esp32_improv:
  authorizer: none
improv_serial:


# Time Configuration
time:
  - platform: homeassistant
    id: ha_time

# I2C Configuration for I2C-sensors
i2c:
  sda: 21
  scl: 22
 
# UART Configuration for HLK-LD2410C
uart:
  id: ld2410_uart
  tx_pin: GPIO17
  rx_pin: GPIO16
  baud_rate: 256000
  parity: NONE
  stop_bits: 1

# HLK-LD2410C Configuration
ld2410:
  uart_id: ld2410_uart
  throttle: 1000ms
  

# ----------- #
### SENSORS ###
sensor:

# BM280 Temperature, Humidity and Pressure
  - platform: bme280
    temperature:
      name: "Temperature"
      id: temperature
      oversampling: 16x
      filters:
        - lambda: 'return x + id(temp_offset).state;'
    pressure:
      name: "Pressure"
      id: pressure
    humidity:
      name: "Humidity"
      id: humidity
      filters:
        - lambda: 'return x + id(hum_offset).state;'
    address: 0x76
    update_interval: 60s
  - platform: template
    name: "Dew Point"
    lambda: |-
      return (243.5*(log(id(humidity).state/100)+((17.67*(id(temperature).state+id(temp_offset).state))/
      (243.5+id(temperature).state+id(temp_offset).state)))/(17.67-log(id(humidity).state/100)-
      ((17.67*(id(temperature).state+id(temp_offset).state))/(243.5+id(temperature).state+id(temp_offset).state))));
    unit_of_measurement: "°C"
    icon: 'mdi:thermometer-alert'

# SGP30 TVOC and eCO2
  - platform: sgp30
    eco2:
      name: "eCO2"
      id: eco2
      accuracy_decimals: 1
    tvoc:
      name: "TVOC"
      id: tvoc
      accuracy_decimals: 1
    store_baseline: yes
    baseline:
      eco2_baseline: 0x9557
      tvoc_baseline: 0x9C2F
    address: 0x58
    update_interval: 1s
    compensation:
      temperature_source: temperature
      humidity_source: humidity

# BH1720 Illuminance
  - platform: bh1750
    name: "Illuminance"
    id: illuminance
    address: 0x23
    update_interval: 5s
    on_value:
      then:
        - script.execute: set_relay 

# HLK-LD2410C Measured values
  - platform: ld2410
    moving_distance:
      name: "mmWave Moving Distance"
    still_distance:
      name: "mmWave Still Distance"
    moving_energy:
      name: "mmWave Move Energy"
    still_energy:
      name: "mmWave Still Energy"
    detection_distance:
      name: "mmWave Detection Distance"
    light:
      name: "mmWave Lightlevel"
      disabled_by_default: true
    g0:
      move_energy:
        name: "mmWave G0 move energy"
        disabled_by_default: true
      still_energy:
        name: "mmWave G0 still energy"
        disabled_by_default: true
    g1:
      move_energy:
        name: "mmWave G1 move energy"
        disabled_by_default: true
      still_energy:
        name: "mmWave G1 still energy"
        disabled_by_default: true
    g2:
      move_energy:
        name: "mmWave G2 move energy"
        disabled_by_default: true
      still_energy:
        name: "mmWave G2 still energy"
        disabled_by_default: true
    g3:
      move_energy:
        name: "mmWave G3 move energy"
        disabled_by_default: true
      still_energy:
        name: "mmWave G3 still energy"
        disabled_by_default: true
    g4:
      move_energy:
        name: "mmWave G4 move energy"
        disabled_by_default: true
      still_energy:
        name: "mmWave G4 still energy"
        disabled_by_default: true
    g5:
      move_energy:
        name: "mmWave G5 move energy"
        disabled_by_default: true
      still_energy:
        name: "mmWave G5 still energy"
        disabled_by_default: true
    g6:
      move_energy:
        name: "mmWave G6 move energy"
        disabled_by_default: true
      still_energy:
        name: "mmWave G6 still energy"
        disabled_by_default: true
    g7:
      move_energy:
        name: "mmWave G7 move energy"
        disabled_by_default: true
      still_energy:
        name: "mmWave G7 still energy"
        disabled_by_default: true
    g8:
      move_energy:
        name: "mmWave G8 move energy"
        disabled_by_default: true
      still_energy:
        name: "mmWave G8 still energy"
        disabled_by_default: true

# Wifi signal
  - platform: wifi_signal
    name: "WiFi Signal"
    update_interval: 60s


# ------------ #
### TEXT SENSORS
text_sensor:

# Wifi info 
  - platform: wifi_info
    ssid:
      name: WiFi SSID


# ------------------ #
### BINARY SENSORS ###
binary_sensor:

# Pushbutton for switch relay
  - platform: gpio
    pin:
      number: 19
      mode:
        input: true
        pulldown: true
    name: "Button"
    id: pushbutton
    filters:
      - delayed_on_off: 50ms
    on_press:
      if:
        condition:
          binary_sensor.is_off: relay_pulsemode
        then:
          - switch.toggle: relay
        else:
          - switch.turn_on: relay
          - wait_until:
              binary_sensor.is_off: pushbutton
          - switch.turn_off: relay

# Switch for setting up relay-functionality
  - platform: gpio
    pin:
      number: 18
      mode:
        input: true
        pulldown: true
    name: "Relay Pulsemode"
    id: relay_pulsemode
    entity_category: CONFIG

# HLK-LD2410C Occupancy sensors
  - platform: ld2410
    has_target:
      name: "mmWave Presence"
      id: mmwave_presence
      on_state:
        then:
          - script.execute: set_relay
    has_moving_target:
      name: "mmWave Moving Target"
    has_still_target:
      name: "mmWave Still Target"


# ------------ #
### SWITCHES ###
switch:

# Relay output
  - platform: gpio
    pin:
      number: 23
      mode:
        output: true
    name: "Relay"
    id: relay
    on_turn_on:
      output.turn_on: relay_status_led
    on_turn_off:
      output.turn_off: relay_status_led

# HLK-LD2410C config swiches
  - platform: ld2410
    engineering_mode:
      name: "mmWave Engineering mode"
      disabled_by_default: true
    bluetooth:
      name: "mmWave Bluetooth"
      disabled_by_default: true


# ----------- #
### OUTPUTS ###
output:

# StatusLED for indicating relay-status
  - id: relay_status_led
    platform: gpio
    pin: 2


# ----------- #
### NUMBERS ###
number:

# HLK-LD2410C config numbers
  - platform: ld2410
    timeout:
      name: "mmWave Timeout"
    light_threshold:
      name: "mmWave Light threshold"
    max_move_distance_gate:
      name: "mmWave Max. move distance gate"
      disabled_by_default: true
    max_still_distance_gate:
      name: "mmWave Max. still distance gate"
      disabled_by_default: true
    g0:
      move_threshold:
        name: "mmWave G0 move threshold"
        disabled_by_default: true
      still_threshold:
        name: "mmWave G0 still threshold"
        disabled_by_default: true
    g1:
      move_threshold:
        name: "mmWave G1 move threshold"
        disabled_by_default: true
      still_threshold:
        name: "mmWave G1 still threshold"
        disabled_by_default: true
    g2:
      move_threshold:
        name: "mmWave G2 move threshold"
        disabled_by_default: true
      still_threshold:
        name: "mmWave G2 still threshold"
        disabled_by_default: true
    g3:
      move_threshold:
        name: "mmWave G3 move threshold"
        disabled_by_default: true
      still_threshold:
        name: "mmWave G3 still threshold"
        disabled_by_default: true
    g4:
      move_threshold:
        name: "mmWave G4 move threshold"
        disabled_by_default: true
      still_threshold:
        name: "mmWave G4 still threshold"
        disabled_by_default: true
    g5:
      move_threshold:
        name: "mmWave G5 move threshold"
        disabled_by_default: true
      still_threshold:
        name: "mmWave G5 still threshold"
        disabled_by_default: true
    g6:
      move_threshold:
        name: "mmWave G6 move threshold"
        disabled_by_default: true
      still_threshold:
        name: "mmWave G6 still threshold"
        disabled_by_default: true
    g7:
      move_threshold:
        name: "mmWave G7 move threshold"
        disabled_by_default: true
      still_threshold:
        name: "mmWave G7 still threshold"
        disabled_by_default: true
    g8:
      move_threshold:
        name: "mmWave G8 move threshold"
        disabled_by_default: true
      still_threshold:
        name: "mmWave G8 still threshold"
        disabled_by_default: true

# Lux-value for switching on light
  - platform: template
    name: "Switch on lux"
    id: switch_on_lux
    entity_category: CONFIG
    mode: box
    unit_of_measurement: lx
    initial_value: 30
    restore_value: true
    min_value: 0
    max_value: 500
    step: 1
    optimistic: true

# Lux-value for switching off light
  - platform: template
    name: "Switch off lux"
    id: switch_off_lux
    entity_category: CONFIG
    mode: box
    unit_of_measurement: lx
    initial_value: 120
    restore_value: true
    min_value: 0
    max_value: 500
    step: 1
    optimistic: true
    
# Setting temperature offset for calibrating temperature readings
  - platform: template
    name: "Temperature offset"
    id: temp_offset
    unit_of_measurement: "°C"
    min_value: -20
    max_value: 20
    step: 0.1
    mode: box
    update_interval: never
    optimistic: true
    restore_value: true
    initial_value: 0
    icon: "mdi:thermometer"
    entity_category: CONFIG

# Setting humidity offset for calibrating humidity readings
  - platform: template
    name: "Humidity offset"
    id: hum_offset
    unit_of_measurement: "%"
    min_value: -20
    max_value: 20
    step: 0.1
    mode: box
    update_interval: never
    optimistic: true
    restore_value: true
    initial_value: 0
    icon: "mdi:water-percent"
    entity_category: CONFIG


# ------------- #
### SELECTORS ###
select:

# HLK-LD2410C config selectors
  - platform: ld2410
    distance_resolution:
      name: "mmWave Distance resolution"
      disabled_by_default: true

# Mode
  - platform: template
    name: "Switch Mode"
    id: switch_mode
    optimistic: true
    options:
      - "Off"
      - "Lux"
      - "Lux + Presence"
    entity_category: CONFIG
    restore_value: true
    on_value:
      if:
        condition:
          and:
            - lambda: return x == "Off";
            - switch.is_on: relay
        then:
          - switch.turn_off: relay
        else:
          - script.execute: set_relay  


# ----------- #
### SCRIPTS ###
script:

# Turn on/off relay
  - id: set_relay
    then:
      - if:
          condition:  # Switch ON conditions
            or:
              - and:  # Mode = Lux + Presence
                  - lambda: return id(switch_mode).state == "Lux + Presence";
                  - lambda: return id(illuminance).state < id(switch_on_lux).state;
                  - switch.is_off: relay
                  - binary_sensor.is_on: mmwave_presence
              - and:  # Mode = Lux
                  - lambda: return id(switch_mode).state == "Lux";
                  - lambda: return id(illuminance).state < id(switch_on_lux).state;
                  - switch.is_off: relay
          then:
            - switch.turn_on: relay
      - if:
          condition:  # Switch OFF conditions
            or:
              - and:  # Mode = Lux + Presence
                  - lambda: return id(switch_mode).state == "Lux + Presence";
                  - switch.is_on: relay  
                  - or:
                    - lambda: return id(illuminance).state > id(switch_off_lux).state;
                    - binary_sensor.is_off: mmwave_presence 
              - and:  # Mode = Lux
                  - lambda: return id(switch_mode).state == "Lux";
                  - lambda: return id(illuminance).state > id(switch_off_lux).state;
                  - switch.is_on: relay
          then:
            - switch.turn_off: relay
  

### END OF CONFIGURATION ###  
